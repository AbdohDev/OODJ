/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Class.Booking;
import java.io.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class ManagerManageBooking extends javax.swing.JFrame {

    /**
     * Creates new form ManagerManageBooking
     */
    public ManagerManageBooking() {
        initComponents();
        trainerCmb.setSelectedItem(null);
        bookTable.setAutoCreateRowSorter(true);
    }
    
    File ft = new File("TrainerAccount.txt");
    public String[] scanGoal(String cgoal){
        String[] TID = null;
        String[] Tarr = null;
        BufferedReader br = null;
        BufferedReader br2 = null;
        int count =0;
        int k =0;
        try{
            br = new BufferedReader(new FileReader(ft));
            String line = "";
            while((line = br.readLine()) != null){
                count++;
            //    TID = new String[count+1];
                TID = new String[50];
                br2 = new BufferedReader(new FileReader(ft));
                line = "";
                int i=0;
                while((line = br2.readLine()) != null){
                    String[] rec = line.split(",");
                    if(rec[4].equals(cgoal)){
                        TID[i] = rec[0];
                        i++;
                        rec = null;
                    }
                }
            }
            br.close();
            br2.close();
            
            
            int j = TID.length - 1;
            
            while(k <= j){
                if(TID[j] == null){
                    --j;
                }else if(TID[k] != null){
                    ++k;
                }else{
                    TID[k] = TID[j];
                    TID[j] = null;
                    ++k;
                    --j;
                }
            }
            
        }catch(IOException e){
            System.out.println("Trainer not found." + e);
            
        }
        
        return Arrays.copyOfRange(TID,0,k);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        bidTxb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cidTxb = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        goalCmb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        trainerCmb = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tdateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        stimeChooser = new com.github.lgooddatepicker.components.TimePicker();
        jLabel9 = new javax.swing.JLabel();
        durationCmb = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        etimeChooser = new com.github.lgooddatepicker.components.TimePicker();
        jLabel11 = new javax.swing.JLabel();
        amountTxb = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        bidTxb1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cidTxb1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        goalCmb1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        trainerCmb1 = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        tdateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        stimeChooser1 = new com.github.lgooddatepicker.components.TimePicker();
        jLabel17 = new javax.swing.JLabel();
        durationCmb1 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        etimeChooser1 = new com.github.lgooddatepicker.components.TimePicker();
        jLabel19 = new javax.swing.JLabel();
        amountTxb1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        returnBttn = new javax.swing.JButton();
        updateB = new javax.swing.JButton();
        importB = new javax.swing.JButton();
        deleteB = new javax.swing.JButton();
        exportB = new javax.swing.JButton();
        addB = new javax.swing.JButton();

        jLabel2.setText("Booking ID:");

        bidTxb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidTxbActionPerformed(evt);
            }
        });

        jLabel5.setText("Customer ID:");
        jLabel5.setMaximumSize(new java.awt.Dimension(27, 16));
        jLabel5.setMinimumSize(new java.awt.Dimension(27, 16));

        jLabel3.setText("Goal:");

        goalCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lose Weight", "Build Muscle", "Wellness" }));
        goalCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goalCmbActionPerformed(evt);
            }
        });

        jLabel4.setText("Trainer:");

        jLabel7.setText("Training Date:");

        jLabel6.setText("Start Training Time:");

        jLabel9.setText("Duration:");

        durationCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 hour", "2 hours", "3 hours" }));
        durationCmb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationCmbActionPerformed(evt);
            }
        });

        jLabel10.setText("End Training Time:");

        jLabel11.setText("Total Amount:");

        amountTxb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTxbActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Booking ID", "Customer ID", "Goal", "Trainer ID", "Training Date", "Starting Time", "Duration", "Ending TIme", "Amount"
            }
        ));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        jLabel8.setText("Booking ID:");

        bidTxb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bidTxb1ActionPerformed(evt);
            }
        });

        jLabel12.setText("Customer ID:");
        jLabel12.setMaximumSize(new java.awt.Dimension(27, 16));
        jLabel12.setMinimumSize(new java.awt.Dimension(27, 16));

        jLabel13.setText("Goal:");

        goalCmb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lose Weight", "Build Muscle", "Wellness" }));
        goalCmb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goalCmb1ActionPerformed(evt);
            }
        });

        jLabel14.setText("Trainer:");

        jLabel15.setText("Training Date:");

        jLabel16.setText("Start Training Time:");

        jLabel17.setText("Duration:");

        durationCmb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 hour", "2 hours", "3 hours" }));
        durationCmb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                durationCmb1ActionPerformed(evt);
            }
        });

        jLabel18.setText("End Training Time:");

        jLabel19.setText("Total Amount:");

        amountTxb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTxb1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Manager: Manage Training");
        jLabel1.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N

        returnBttn.setText("< Return");
        returnBttn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBttnActionPerformed(evt);
            }
        });

        updateB.setText("Update");
        updateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBActionPerformed(evt);
            }
        });

        importB.setText("Import");
        importB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importBActionPerformed(evt);
            }
        });

        deleteB.setText("Delete");
        deleteB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBActionPerformed(evt);
            }
        });

        exportB.setText("Export");
        exportB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBActionPerformed(evt);
            }
        });

        addB.setText("Add");
        addB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(returnBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(76, 76, 76))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amountTxb1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(bidTxb1)
                                    .addComponent(goalCmb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(trainerCmb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cidTxb1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tdateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(durationCmb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(stimeChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(etimeChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(importB, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(exportB, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exportB, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(importB, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteB, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(returnBttn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bidTxb1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cidTxb1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(goalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(trainerCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(etimeChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tdateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(stimeChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(durationCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountTxb1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bidTxbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidTxbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidTxbActionPerformed

    private void goalCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goalCmbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_goalCmbActionPerformed

    private void durationCmbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationCmbActionPerformed
        //Calculate total payment
        String duration = durationCmb.getSelectedItem().toString();

        int d;
        int p = 50;
        boolean t = true;
        while(t){
            d = switch (duration) {
                case "1 hour" -> 1;
                case "2 hours" -> 2;
                case "3 hours" -> 3;
                default -> 0;
            };
            int fee = d*p;
            amountTxb.setText("RM" + Integer.toString(fee));
            t = false;
        }
    }//GEN-LAST:event_durationCmbActionPerformed

    private void amountTxbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTxbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTxbActionPerformed

    private void bidTxb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bidTxb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bidTxb1ActionPerformed

    private void goalCmb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goalCmb1ActionPerformed
        //For Trainer
        String cgoal = goalCmb1.getSelectedItem().toString();
        trainerCmb1.removeAllItems();
        String[] arr = scanGoal(cgoal);
        for (String arr1 : arr) {
            trainerCmb1.addItem(arr1);
        }
        trainerCmb1.setSelectedItem(null);
    }//GEN-LAST:event_goalCmb1ActionPerformed

    private void durationCmb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_durationCmb1ActionPerformed
        //Calculate total payment
        String duration = durationCmb1.getSelectedItem().toString();

        int d;
        int p = 50;
        boolean t = true;
        while(t){
            d = switch (duration) {
                case "1 hour" -> 1;
                case "2 hours" -> 2;
                case "3 hours" -> 3;
                default -> 0;
            };
            int fee = d*p;
            amountTxb1.setText("RM" + Integer.toString(fee));
            t = false;
        }
    }//GEN-LAST:event_durationCmb1ActionPerformed

    private void amountTxb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTxb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTxb1ActionPerformed

    private void returnBttnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBttnActionPerformed
        ManagerMenu mm = new ManagerMenu();
        mm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_returnBttnActionPerformed

    private void importBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importBActionPerformed
        File fb = new File("Booking.txt");
        try {
            FileReader fr = new FileReader(fb);
            BufferedReader br3 = new BufferedReader(fr);
            
            DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
            Object[] records = br3.lines().toArray();
            
            for (int i = 0; i < records.length; i++) {
                String[] row = records[i].toString().split(",");
                tm.addRow(row);
            }
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this,
                    "Oops, file not found.",
                    "Warning:",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_importBActionPerformed

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
        DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
        
        String bookid = tm.getValueAt(bookTable.getSelectedRow(),0).toString();
        String custid = tm.getValueAt(bookTable.getSelectedRow(),1).toString();
        String custgoal = tm.getValueAt(bookTable.getSelectedRow(),2).toString();
        String trainerid = tm.getValueAt(bookTable.getSelectedRow(),3).toString();
        String trainDate = tm.getValueAt(bookTable.getSelectedRow(),4).toString();
        String startT = tm.getValueAt(bookTable.getSelectedRow(),5).toString();
        String duration = tm.getValueAt(bookTable.getSelectedRow(),6).toString();
        String endT = tm.getValueAt(bookTable.getSelectedRow(),7).toString();
        String amount = tm.getValueAt(bookTable.getSelectedRow(),8).toString();
        
        bidTxb1.setText(bookid);
        cidTxb1.setText(custid);
        goalCmb1.setSelectedItem(custgoal);
        java.util.Date tdate = null;
        try {
            tdate = new SimpleDateFormat("dd-MM-yyyy").parse(trainDate);
        } catch (ParseException ex) {
            Logger.getLogger(ManagerManageBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        tdateChooser1.setDate(tdate);
        stimeChooser1.setText(startT);
        durationCmb1.setSelectedItem(duration);
        etimeChooser1.setText(endT);
        amountTxb1.setText(amount);
        
        custgoal = goalCmb1.getSelectedItem().toString();
        trainerCmb1.removeAllItems();
        String[] arr = scanGoal(custgoal);
        for (String arr1 : arr) {
            trainerCmb1.addItem(arr1);
        }
        trainerCmb1.setSelectedItem(trainerid);
        
        
    }//GEN-LAST:event_bookTableMouseClicked

    private void updateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBActionPerformed
        DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
        
        if(bookTable.getSelectedRowCount() == 1){
            String bid = bidTxb1.getText();
            String cid = cidTxb1.getText();
            String cgoal = goalCmb1.getSelectedItem().toString();
            String tid = trainerCmb1.getSelectedItem().toString();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String tdate = sdf.format(tdateChooser1.getDate());
            String stime = stimeChooser1.getText();
            String duration = durationCmb1.getSelectedItem().toString();
            String etime = etimeChooser1.getText();
            String amount = amountTxb1.getText();
            
            tm.setValueAt(bid,bookTable.getSelectedRow(),0);
            tm.setValueAt(cid,bookTable.getSelectedRow(),1);
            tm.setValueAt(cgoal,bookTable.getSelectedRow(),2);
            tm.setValueAt(tid,bookTable.getSelectedRow(),3);
            tm.setValueAt(tdate,bookTable.getSelectedRow(),4);
            tm.setValueAt(stime,bookTable.getSelectedRow(),5);
            tm.setValueAt(duration,bookTable.getSelectedRow(),6);
            tm.setValueAt(etime,bookTable.getSelectedRow(),7);
            tm.setValueAt(amount,bookTable.getSelectedRow(),8);
            
            JOptionPane.showMessageDialog(this, "Update Successful!");
            
        }else if(bookTable.getSelectedRowCount() == 0){
            JOptionPane.showMessageDialog(this, "The table is empty.\nPlease import.");
        }else{
            JOptionPane.showMessageDialog(this, "Please select a record to modify~"); 
        }
    }//GEN-LAST:event_updateBActionPerformed

    private void exportBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBActionPerformed
        Booking b = new Booking();
        int export = 0;
        File f = new File("Booking.txt");
        try{
            FileWriter fw = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(fw);

            for (int i = 0; i < bookTable.getRowCount(); i++) {
                for (int j = 0; j < bookTable.getColumnCount(); j++) {
                    bw.write(bookTable.getModel().getValueAt(i,j).toString()+",");
                }
                bw.newLine();
            }
            bw.close();
            fw.close();
            export = 1;
        } catch (IOException ex) {
            Logger.getLogger(ManagerManageBooking.class.getName()).log(Level.SEVERE, null, ex);
            export = 2;
        }
        
        b.manage(export);
    }//GEN-LAST:event_exportBActionPerformed

    private void deleteBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBActionPerformed
        DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
        
        if(bookTable.getSelectedRowCount() == 1){
            tm.removeRow(bookTable.getSelectedRow());
        }
        else{
            if(bookTable.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "The table is empty.\nPlease import.");
            }
            else{
                JOptionPane.showMessageDialog(this,
                    "Please select single row for delete","Warning:",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteBActionPerformed

    private void addBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBActionPerformed
        DefaultTableModel tm = (DefaultTableModel)bookTable.getModel();
        
        if(bookTable.getRowCount()!=0){
            String bid = bidTxb1.getText();
            String cid = cidTxb1.getText();
            String cgoal = goalCmb1.getSelectedItem().toString();
            String tid = trainerCmb1.getSelectedItem().toString();
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String tdate = sdf.format(tdateChooser1.getDate());
            String stime = stimeChooser1.getText();
            String duration = durationCmb1.getSelectedItem().toString();
            String etime = etimeChooser1.getText();
            String amount = amountTxb1.getText();
        
            Booking b = new Booking();
            int create = b.createBooking(bid,cid,cgoal,tid,tdate,stime, duration, etime, amount);
            String rec[] = {bid,cid,cgoal,tid,tdate,stime, duration, etime, amount};
        
            switch (create) {
                case 1 -> {
                    tm.addRow(rec);
                    JOptionPane.showMessageDialog(null,"Training Booking Success!");
                }
                case 2 -> JOptionPane.showMessageDialog(this,
                            "Please fill up complete details.",
                            "Warning:",JOptionPane.WARNING_MESSAGE);
                default -> JOptionPane.showMessageDialog(this,
                        "Error\nPlease try again.",
                        "Warning:",JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "The table is empty.\nPlease import.");
        }
        
        bidTxb.setText("");
        cidTxb.setText("");
        stimeChooser.setText("");
        etimeChooser.setText("");
        amountTxb.setText("");
    }//GEN-LAST:event_addBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerManageBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerManageBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addB;
    private javax.swing.JTextField amountTxb;
    private javax.swing.JTextField amountTxb1;
    private javax.swing.JTextField bidTxb;
    private javax.swing.JTextField bidTxb1;
    private javax.swing.JTable bookTable;
    private javax.swing.JTextField cidTxb;
    private javax.swing.JTextField cidTxb1;
    private javax.swing.JButton deleteB;
    private javax.swing.JComboBox<String> durationCmb;
    private javax.swing.JComboBox<String> durationCmb1;
    private com.github.lgooddatepicker.components.TimePicker etimeChooser;
    private com.github.lgooddatepicker.components.TimePicker etimeChooser1;
    private javax.swing.JButton exportB;
    private javax.swing.JComboBox<String> goalCmb;
    private javax.swing.JComboBox<String> goalCmb1;
    private javax.swing.JButton importB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton returnBttn;
    private com.github.lgooddatepicker.components.TimePicker stimeChooser;
    private com.github.lgooddatepicker.components.TimePicker stimeChooser1;
    private com.toedter.calendar.JDateChooser tdateChooser;
    private com.toedter.calendar.JDateChooser tdateChooser1;
    private javax.swing.JComboBox<String> trainerCmb;
    private javax.swing.JComboBox<String> trainerCmb1;
    private javax.swing.JButton updateB;
    // End of variables declaration//GEN-END:variables
}
